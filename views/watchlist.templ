package views

import (
	"believer/movies/components"
	"believer/movies/types"
	"fmt"
)

type WatchlistProps struct {
	Movies types.Movies
}

templ Watchlist(props WatchlistProps) {
	@Layout(LayoutProps{Title: "Watchlist"}) {
		<div class="mx-auto flex max-w-xl flex-col gap-8 px-5 py-8">
			<nav>
				<div class="left-5 top-5 md:absolute">
					@components.Link(components.LinkProps{Href: "/"}) {
						Home
					}
				</div>
			</nav>
			@components.H1("Watchlist", false)
			<div>
				{ props.Movies.NumberOfMovies() }
			</div>
			if len(props.Movies) > 0 {
				<ol class="flex flex-col gap-2 md:text-sm text-neutral-500 dark:text-neutral-400">
					for _, movie := range props.Movies {
						<li class="flex items-end justify-between gap-4">
							@components.Link(components.LinkProps{Href: fmt.Sprintf("/movie/%d", movie.ID)}) {
								{ movie.Title }
							}
							@components.Divider()
							<span class="flex items-center gap-x-2 relative top-1">
								<span class="tabular-nums whitespace-nowrap">
									{ movie.CreatedAt.Format("2006-01-02") }
								</span>
								<a href={ templ.URL(fmt.Sprintf("/movie/new?imdbId=%s&id=%d", movie.ImdbId, movie.ID)) } class="text-neutral-500 dark:text-neutral-400 hover:text-neutral-800 dark:hover:text-neutral-200 transition-colors" title="Add watch">
									<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
										<path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z"></path>
										<path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"></path>
									</svg>
								</a>
							</span>
						</li>
					}
				</ol>
			} else {
				<div>
					Watchlist empty
				</div>
			}
		</div>
	}
}
