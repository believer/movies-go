package views

import (
	c "believer/movies/components"
	"believer/movies/types"
)

type WatchlistProps struct {
	Movies           types.Movies
	UnreleasedMovies types.Movies
}

templ watchlistList(movies types.Movies, title string) {
	@c.Section(title, len(movies)) {
		<ol class="flex flex-col gap-2 md:text-sm text-neutral-500 dark:text-neutral-400">
			for _, movie := range movies {
				<li class="flex items-end justify-between gap-4">
					@c.Link(c.LinkProps{Href: movie.LinkTo()}) {
						{ movie.Title }
					}
					@c.Divider()
					<span class="flex items-center gap-x-2 relative top-1">
						<span class="tabular-nums whitespace-nowrap">
							@c.SimpleLink(c.SimpleLinkProps{Href: movie.LinkToYear()}) {
								{ movie.ReleaseDateOrCreatedAt() }
							}
						</span>
						@c.IsAuthenticated() {
							<a href={ movie.LinkToWatchlistAdd() } class="text-neutral-500 dark:text-neutral-400 hover:text-neutral-800 dark:hover:text-neutral-200 transition-colors" title="Add watch">
								@c.IconEye()
							</a>
						}
					</span>
				</li>
			}
		</ol>
	}
}

templ Watchlist(props WatchlistProps) {
	@Layout(LayoutProps{Title: "Watchlist"}) {
		@StandardBody("Watchlist") {
			if len(props.Movies) > 0 {
				@watchlistList(props.Movies, "Movies")
			} else {
				@c.EmptyState("Watchlist empty")
			}
			if len(props.UnreleasedMovies) > 0 {
				@watchlistList(props.UnreleasedMovies, "Unreleased movies")
			}
		}
	}
}
