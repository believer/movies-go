package views

import (
	"believer/movies/components"
	"believer/movies/types"
)

type NewMovieProps struct {
	ImdbID      string
	InWatchlist bool
	Movie       types.Movie
}

templ NewMovie(props NewMovieProps) {
	@Layout(LayoutProps{Title: "Add movie"}) {
		<form
			hx-post="/movie/new"
			hx-indicator="#sending"
			class="mx-auto flex max-w-xl flex-col gap-6 px-4 py-8"
		>
			<div>
				@components.Link(components.LinkProps{Href: "/"}) {
					Back
				}
			</div>
			if props.Movie.ID != 0 {
				<div>
					Adding <strong>{ props.Movie.Title }</strong> from watchlist
				</div>
			}
			if props.ImdbID == "" {
				<div class="relative flex flex-col gap-2">
					@components.Label("search", "Search")
					<input
						type="text"
						hx-get="/movie/search"
						hx-trigger="keyup changed delay:500ms"
						hx-target="#search-results"
						hx-indicator="none"
						hx-validate="true"
						minlength="3"
						name="search"
						id="search"
						class="w-full rounded border border-neutral-400 bg-transparent px-4 py-2 ring-offset-2 ring-offset-white focus:outline-none focus:ring-2 focus:ring-neutral-400 dark:border-neutral-700 dark:ring-offset-neutral-900 dark:focus:ring-neutral-500"
					/>
					<div
						id="search-results"
						class="text-xs empty:hidden lg:absolute lg:-right-52 lg:top-6 lg:w-48 lg:rounded lg:p-2 lg:outline-dashed lg:outline-offset-4 lg:outline-neutral-500"
					></div>
				</div>
			}
			<div class="relative flex flex-col gap-2">
				if props.ImdbID != "" {
					@components.Label("imdb_id", "IMDb ID")
				} else {
					@components.Label("imdb_id", "IMDb ID or TMDB ID")
				}
				<input
					required
					type="text"
					hx-get="/movie/imdb"
					hx-trigger="blur changed"
					hx-target="#movie-exists"
					hx-indicator="none"
					hx-validate="true"
					name="imdb_id"
					id="imdb_id"
					class="w-full rounded border border-neutral-400 bg-transparent px-4 py-2 ring-offset-2 ring-offset-white focus:outline-none focus:ring-2 focus:ring-neutral-400 dark:border-neutral-700 dark:ring-offset-neutral-900 dark:focus:ring-neutral-500"
					if props.ImdbID != "" {
						value={ props.ImdbID }
						readonly
					}
				/>
				<div
					id="movie-exists"
					class="text-xs empty:hidden lg:absolute lg:-right-52 lg:top-6 lg:w-48 lg:rounded lg:p-2 lg:outline-dashed lg:outline-offset-4 lg:outline-neutral-500"
				></div>
				@components.Help("For example, https://www.imdb.com/title/tt0111161/, or just tt0111161.")
			</div>
			@components.NumberInput("rating", "Rating", "A value between 0 and 10", 0, 10)
			@components.DateTimeInput("watched_at", "Watched at", "Defaults to current time if left empty.")
			if !props.InWatchlist {
				<div class="flex gap-x-2 items-center">
					<input type="checkbox" name="watchlist" id="watchlist" class="rounded accent-neutral-700 border border-neutral-700 bg-neutral-800 focus:outline-dashed focus:outline-offset-2 focus:outline-neutral-500" _="on click if me.checked remove @required from #rating otherwise add @required='' to #rating"/>
					@components.Label("watchlist", "Add to watchlist")
				</div>
			}
			<footer class="flex flex-col gap-y-4">
				<div id="error" class="empty:hidden text-rose-700 dark:text-rose-400 border border-dashed border-rose-700 dark:border-rose-400 p-4 rounded"></div>
				<button
					class="rounded bg-neutral-200 px-6 py-2 text-neutral-700 dark:bg-neutral-700 dark:text-neutral-200"
					type="submit"
				>
					Add
				</button>
				<div id="sending" class="htmx-indicator">Sending...</div>
			</footer>
		</form>
	}
}
