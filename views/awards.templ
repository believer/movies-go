package views

import "believer/movies/types"
import "believer/movies/components/separator"
import "believer/movies/components/section"
import "believer/movies/components/layout"
import "believer/movies/components/list"
import "believer/movies/components/link"

type AwardsPageProps struct {
	GroupedAwards []types.AwardsByYear
	Name          string
}

templ AwardsPage(props AwardsPageProps) {
	@layout.Layout(layout.Props{Title: props.Name}) {
		for _, group := range props.GroupedAwards {
			@section.Section(section.Props{
				Title: group.Title,
				Href:  group.LinkToMovie(),
			}) {
				@list.Ol() {
					for _, award := range group.Awards {
						@list.Li() {
							<div class="row">
								<div>
									{ award.Category }
								</div>
								@separator.Separator()
								<span>
									if award.Winner {
										Won
									} else {
										Nominated
									}
								</span>
							</div>
							if len(award.Nominees) > 0 {
								<div class="detail">
									for i, n := range award.Nominees {
										if n.ID != 0 {
											@link.Link(
												link.Props{Href: n.LinkTo(),
													Style: map[string]templ.SafeCSSProperty{
														"--color":     "var(--color-content-secondary)",
														"--font-size": "var(--text-xs)",
													},
												}) {
												{ n.Name }
											}
										} else {
											{ n.Name }
										}
										if i < len(award.Nominees) - 1 {
											<span class="comma">
												{ ", " }
											</span>
										}
									}
								</div>
							}
							if award.Detail.Valid {
								<div class="detail">
									{ award.Detail.String }
								</div>
							}
						}
					}
				}
			}
		}
	}
}
