package views

import (
	"believer/movies/components"
	"believer/movies/types"
	"fmt"
	"strconv"
)

templ Credit(title string, data types.PersonMovies, id string) {
	if len(data) > 0 {
		@components.Section(title, len(data)) {
			<ol class="flex flex-col gap-2">
				for _, movie := range data {
					<li class="flex items-end justify-between gap-4">
						@components.Link(components.LinkProps{Href: fmt.Sprintf("/movie/%d", movie.ID)}) {
							{ movie.Title }
						}
						@components.Divider()
						if movie.Character != "" {
							<div class="text-sm truncate relative top-1">{ movie.Character }</div>
						}
						<span class="flex items-center gap-x-2">
							<a
								class="text-sm tabular-nums inline-flex items-center gap-1 focus:outline-none focus-visible:rounded-sm focus-visible:outline-dashed focus-visible:outline-offset-2 focus-visible:outline-neutral-400 dark:focus-visible:outline-neutral-600 border-b border-dashed border-neutral-500 dark:border-neutral-400"
								href={ templ.URL(fmt.Sprintf("/year/%s", movie.ReleaseDate.Format("2006"))) }
							>
								{ movie.ReleaseDate.Format("2006") }
							</a>
							@Seen(movie.Seen)
						</span>
					</li>
				}
			</ol>
		}
	}
}

templ Person(person types.Person, totalCredits int, id string) {
	@Layout(LayoutProps{Title: person.Name}) {
		<div
			class="mx-auto flex max-w-xl flex-col gap-8 px-5 py-8"
		>
			@components.H1(person.Name, false)
			<div>
				{ strconv.Itoa(totalCredits) } credits
			</div>
			@Credit("Cast", person.Cast, id)
			@Credit("Director", person.Director, id)
			@Credit("Writer", person.Writer, id)
			@Credit("Producer", person.Producer, id)
			@Credit("Composer", person.Composer, id)
		</div>
	}
}
