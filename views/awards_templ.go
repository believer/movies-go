// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "believer/movies/types"
import "believer/movies/components/separator"
import "believer/movies/components/section"
import "believer/movies/components/layout"
import "believer/movies/components/list"
import "believer/movies/components/link"

type AwardsPageProps struct {
	GroupedAwards []types.AwardsByYear
	Name          string
}

func AwardsPage(props AwardsPageProps) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			for _, group := range props.GroupedAwards {
				templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
					templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
					templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
					if !templ_7745c5c3_IsBuffer {
						defer func() {
							templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
							if templ_7745c5c3_Err == nil {
								templ_7745c5c3_Err = templ_7745c5c3_BufErr
							}
						}()
					}
					ctx = templ.InitializeContext(ctx)
					templ_7745c5c3_Var4 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
						templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
						templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
						if !templ_7745c5c3_IsBuffer {
							defer func() {
								templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
								if templ_7745c5c3_Err == nil {
									templ_7745c5c3_Err = templ_7745c5c3_BufErr
								}
							}()
						}
						ctx = templ.InitializeContext(ctx)
						for _, award := range group.Awards {
							templ_7745c5c3_Var5 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
								templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
								templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
								if !templ_7745c5c3_IsBuffer {
									defer func() {
										templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
										if templ_7745c5c3_Err == nil {
											templ_7745c5c3_Err = templ_7745c5c3_BufErr
										}
									}()
								}
								ctx = templ.InitializeContext(ctx)
								templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"row\"><div>")
								if templ_7745c5c3_Err != nil {
									return templ_7745c5c3_Err
								}
								var templ_7745c5c3_Var6 string
								templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(award.Category)
								if templ_7745c5c3_Err != nil {
									return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/awards.templ`, Line: 27, Col: 25}
								}
								_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
								if templ_7745c5c3_Err != nil {
									return templ_7745c5c3_Err
								}
								templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div>")
								if templ_7745c5c3_Err != nil {
									return templ_7745c5c3_Err
								}
								templ_7745c5c3_Err = separator.Separator().Render(ctx, templ_7745c5c3_Buffer)
								if templ_7745c5c3_Err != nil {
									return templ_7745c5c3_Err
								}
								templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<span>")
								if templ_7745c5c3_Err != nil {
									return templ_7745c5c3_Err
								}
								if award.Winner {
									templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "Won")
									if templ_7745c5c3_Err != nil {
										return templ_7745c5c3_Err
									}
								} else {
									templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "Nominated")
									if templ_7745c5c3_Err != nil {
										return templ_7745c5c3_Err
									}
								}
								templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</span></div>")
								if templ_7745c5c3_Err != nil {
									return templ_7745c5c3_Err
								}
								if len(award.Nominees) > 0 {
									templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"detail\">")
									if templ_7745c5c3_Err != nil {
										return templ_7745c5c3_Err
									}
									for i, n := range award.Nominees {
										if n.ID != 0 {
											templ_7745c5c3_Var7 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
												templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
												templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
												if !templ_7745c5c3_IsBuffer {
													defer func() {
														templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
														if templ_7745c5c3_Err == nil {
															templ_7745c5c3_Err = templ_7745c5c3_BufErr
														}
													}()
												}
												ctx = templ.InitializeContext(ctx)
												var templ_7745c5c3_Var8 string
												templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(n.Name)
												if templ_7745c5c3_Err != nil {
													return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/awards.templ`, Line: 49, Col: 20}
												}
												_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
												if templ_7745c5c3_Err != nil {
													return templ_7745c5c3_Err
												}
												return nil
											})
											templ_7745c5c3_Err = link.Link(
												link.Props{Href: n.LinkTo(),
													Style: map[string]templ.SafeCSSProperty{
														"--color":     "var(--color-content-secondary)",
														"--font-size": "var(--text-xs)",
													},
												}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var7), templ_7745c5c3_Buffer)
											if templ_7745c5c3_Err != nil {
												return templ_7745c5c3_Err
											}
										} else {
											var templ_7745c5c3_Var9 string
											templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(n.Name)
											if templ_7745c5c3_Err != nil {
												return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/awards.templ`, Line: 52, Col: 19}
											}
											_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
											if templ_7745c5c3_Err != nil {
												return templ_7745c5c3_Err
											}
										}
										templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, " ")
										if templ_7745c5c3_Err != nil {
											return templ_7745c5c3_Err
										}
										if i < len(award.Nominees)-1 {
											templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<span class=\"comma\">")
											if templ_7745c5c3_Err != nil {
												return templ_7745c5c3_Err
											}
											var templ_7745c5c3_Var10 string
											templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(", ")
											if templ_7745c5c3_Err != nil {
												return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/awards.templ`, Line: 56, Col: 18}
											}
											_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
											if templ_7745c5c3_Err != nil {
												return templ_7745c5c3_Err
											}
											templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</span>")
											if templ_7745c5c3_Err != nil {
												return templ_7745c5c3_Err
											}
										}
									}
									templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</div>")
									if templ_7745c5c3_Err != nil {
										return templ_7745c5c3_Err
									}
								}
								templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, " ")
								if templ_7745c5c3_Err != nil {
									return templ_7745c5c3_Err
								}
								if award.Detail.Valid {
									templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<div class=\"detail\">")
									if templ_7745c5c3_Err != nil {
										return templ_7745c5c3_Err
									}
									var templ_7745c5c3_Var11 string
									templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(award.Detail.String)
									if templ_7745c5c3_Err != nil {
										return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/awards.templ`, Line: 64, Col: 30}
									}
									_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
									if templ_7745c5c3_Err != nil {
										return templ_7745c5c3_Err
									}
									templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</div>")
									if templ_7745c5c3_Err != nil {
										return templ_7745c5c3_Err
									}
								}
								return nil
							})
							templ_7745c5c3_Err = list.Li().Render(templ.WithChildren(ctx, templ_7745c5c3_Var5), templ_7745c5c3_Buffer)
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						}
						return nil
					})
					templ_7745c5c3_Err = list.Ol().Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					return nil
				})
				templ_7745c5c3_Err = section.Section(section.Props{
					Title: group.Title,
					Href:  group.LinkToMovie(),
				}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			return nil
		})
		templ_7745c5c3_Err = layout.Layout(layout.Props{Title: props.Name}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
