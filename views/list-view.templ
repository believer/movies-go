package views

import "believer/movies/types"
import "believer/movies/components/empty-state"
import "believer/movies/components/link"
import "believer/movies/components/separator"
import "believer/movies/components/list"
import "believer/movies/components/layout"

import "believer/movies/components/seen"

type ListViewProps struct {
	EmptyState string
	Name       string
	NextPage   string
	Movies     types.Movies
}

templ ListView(props ...ListViewProps) {
	{{ var p ListViewProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	@layout.Layout(layout.Props{Title: p.Name}) {
		if len(p.Movies) > 0 {
			@list.Ol() {
				for _, movie := range p.Movies {
					@list.Li() {
						@link.Link(link.Props{Href: movie.LinkTo()}) {
							{ movie.Title }
						}
						@separator.Separator()
						@list.Trailing() {
							@link.Link(link.Props{Href: movie.LinkToYear()}) {
								{ movie.ISOReleaseDate() }
							}
							@seen.Seen(seen.Props{
								Title:  "id",
								Seen:   movie.Seen,
								ImdbId: movie.ImdbId,
								ID:     movie.ID,
							})
						}
					}
				}
				if p.NextPage != "" && len(p.Movies) >= 50 {
					<li
						hx-get={ p.NextPage }
						hx-trigger="revealed"
						hx-swap="outerHTML"
						hx-select="li"
					></li>
				}
			}
		} else {
			@emptystate.EmptyState() {
				{ p.EmptyState }
			}
		}
	}
}
