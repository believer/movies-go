@import "tailwindcss";

@theme inline {
	/* Background */
	--color-background-primary: light-dark(
		var(--color-white),
		var(--color-neutral-900)
	);
	--color-background-secondary: light-dark(
		var(--color-neutral-200),
		var(--color-neutral-800)
	);

	/* Border */
	--color-border-primary: light-dark(
		var(--color-neutral-300),
		var(--color-neutral-700)
	);
	--color-border-highlight: light-dark(
		var(--color-yellow-800),
		var(--color-yellow-100)
	);

	/* Content */
	--color-content-primary: light-dark(
		var(--color-neutral-700),
		var(--color-neutral-300)
	);
	--color-content-secondary: light-dark(
		var(--color-neutral-500),
		var(--color-neutral-400)
	);
	--color-content-tertiary: light-dark(
		var(--color-neutral-400),
		var(--color-neutral-600)
	);
	--color-content-quarternary: light-dark(
		var(--color-neutral-300),
		var(--color-neutral-700)
	);
}

:root {
	/* Enable light and dark mode colors */
	color-scheme: light dark;

	--spacing-1: 4px;
	--spacing-2: 8px;
	--spacing-3: 12px;
	--spacing-4: 16px;
	--spacing-5: 20px;
	--spacing-6: 24px;
	--spacing-7: 28px;
	--spacing-8: 32px;
	--spacing-max: calc(infinity * 1px);

	--text-xs: 0.75rem;
	--text-sm: 0.875rem;

	/* Background */
	--color-background-primary: light-dark(
		var(--color-white),
		var(--color-neutral-900)
	);
	--color-background-secondary: light-dark(
		var(--color-neutral-200),
		var(--color-neutral-800)
	);

	/* Border */
	--color-border-primary: light-dark(
		var(--color-neutral-300),
		var(--color-neutral-700)
	);

	/* Content */
	--color-content-primary: light-dark(
		var(--color-neutral-700),
		var(--color-neutral-300)
	);
	--color-content-secondary: light-dark(
		var(--color-neutral-500),
		var(--color-neutral-400)
	);
	--color-content-tertiary: light-dark(
		var(--color-neutral-400),
		var(--color-neutral-600)
	);
	--color-content-quarternary: light-dark(
		var(--color-neutral-300),
		var(--color-neutral-700)
	);
	--color-content-highlight: light-dark(
		var(--color-yellow-800),
		var(--color-yellow-200)
	);
}

/* Component styles */
@layer components {
	.year {
		-webkit-text-stroke-width: 2px;
		-webkit-text-stroke-color: light-dark(
			rgba(163 163 163 / 1),
			rgba(82 82 82 / 1)
		);
		display: block;
		left: -13rem;
		z-index: 20;
		padding-block: var(--spacing-2);
		font-family:
			Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
		font-size: var(--text-3xl);
		line-height: 2.25rem;
		color: transparent;
		background-color: var(--color-background-primary);

		@media (min-width: 1024px) {
			font-size: 4.5rem;
			line-height: 1;
			padding-block: var(--spacing-4);
			position: absolute;
			top: -1rem;
		}
	}
}

/* These handle positioning when the element sticks,
* .year and .month are use to align with the list items */
.year-indicator {
	margin-block: 0;
	position: sticky;
	top: 0;
	z-index: 20;

	@media (width >= 1024px) {
		top: var(--spacing-4);
	}
}

.month-indicator {
	margin-block: 0;
	position: sticky;
	top: 48px;
	z-index: 10;

	@media (width >= 1024px) {
		top: 96px;
	}
}

.month {
	background-color: var(--color-background-primary);
	color: var(--color-content-tertiary);
	font-size: var(--text-lg);
	padding-block: var(--spacing-1);
	z-index: 10;

	@media (width >= 1024px) {
		font-size: var(--text-xl);
		left: -196px;
		position: absolute;
		text-align: right;
		top: -4px;
		width: 160px;
	}
}

/* Scroll driven animation to fade in date indicators
* Note that the order of the properties seems to be important here,
* animation needed to be before animation-timeline.
* */
@media (prefers-reduced-motion: no-preference) and (min-width: 1024px) {
	@supports (animation-range: 0 50vh) {
		.year,
		.month {
			opacity: 0;
			transform: translateY(50px);
			animation: fade-in linear forwards;
			animation-timeline: view();
			/* Start at 0px (when it comes into view), end at half the screen height */
			animation-range: 0 50vh;
		}

		@keyframes fade-in {
			to {
				opacity: 1;
				transform: translateY(0);
			}
		}
	}
}

/**
 * Components
 * ============================================================ */

.focus:focus-visible {
	border-radius: 1px;
	outline: 1px dashed var(--color-content-secondary);
	outline-offset: var(--spacing-1);
}

/* Popover */

.popover {
	background-color: var(--color-background-secondary);
	border-radius: var(--spacing-1);
	color: var(--color-content-primary);
	font-size: var(--text-xs);
	margin: 4px;
	opacity: 0;
	padding: var(--spacing-2);
	position-area: top;
	position-try: flip-block;
	transition:
		opacity 500ms,
		translate 400ms,
		display 500ms allow-discrete,
		overlay 500ms allow-discrete;

	&:popover-open {
		opacity: 100;
		translate: 0;

		@starting-style {
			opacity: 0;
			translate: 0 10px;
		}
	}
}

.popover-button {
	/* Used for round focus styling */
	border-radius: var(--spacing-max);
	cursor: pointer;
}

/* List */

@property --list-style {
	syntax: "numbered | none";
	inherits: false;
	initial-value: none;
}

.list {
	display: flex;
	flex-direction: column;
	row-gap: var(--spacing-2);
}

.list__item {
	align-items: flex-end;
	column-gap: var(--spacing-4);
	justify-content: space-between;

	/* TODO: Use sibling-count() or something to set grid styling together
     * with conditional display styling */

	/* display: if(style(--list-style: none): flex; else: grid;); */
}

.description-list {
	display: grid;
	column-gap: var(--spacing-6);
	grid-template-columns: max-content 1fr;
	row-gap: var(--spacing-2);

	@container (width <= 400px) {
		display: block;

		dt:nth-child(even) {
			margin-bottom: var(--spacing-2);
			margin-top: calc(var(--spacing-1) / 2);
		}

		:last-child > dt {
			margin-bottom: 0;
		}
	}

	.dd {
		font-weight: 600;
	}

	.dt--tabular {
		font-variant-numeric: tabular-nums;
		overflow: hidden;
	}
}

/* Section */

.section {
	/** TODO: Not set color this high up? */
	color: var(--color-content-secondary);
	container-type: inline-size;
	display: flex;
	flex-direction: column;
	font-size: var(--text-sm);
	row-gap: var(--spacing-4);

	.section__title {
		align-items: center;
		color: var(--color-content-primary);
		display: flex;
		font-weight: 500;

		h2 {
			align-items: center;
			column-gap: var(--spacing-2);
			display: flex;
		}
	}

	.section__subtitle {
		color: var(--color-content-secondary);
		font-size: var(--text-xs);
		font-weight: 400;
	}
}

/* Link */

.link {
	align-items: center;
	border-bottom: 1px dashed;
	border-color: inherit;
	display: inline-flex;
	font-variant-numeric: tabular-nums;
	gap: var(--spacing-1);
	transition: border-color 150ms ease-in;

	&:hover {
		border-color: var(--color-content-secondary);
	}

	&.link--new {
		--size: 48px;

		border-bottom: 0;
		border-radius: var(--spacing-max);
		padding: 4px;
		position: relative;

		&:before {
			--size: 40px;

			border-radius: var(--spacing-max);
			content: "";
			height: var(--size);
			left: 50%;
			position: absolute;
			top: 50%;
			transition:
				background-color 200ms ease-in-out,
				scale 150ms ease-in;
			transform: translateX(-50%) translateY(-50%);
			transform-origin: top left;
			scale: 0.8;
			width: var(--size);
			z-index: -1;

			@media (width <= 480px) {
				display: none;
			}
		}

		&:hover:before {
			background-color: var(--color-background-secondary);
			scale: 1;
		}

		@media (width <= 480px) {
			align-items: center;
			justify-content: center;
			background-color: var(--color-background-secondary);
			bottom: var(--spacing-8);
			display: flex;
			position: fixed;
			right: var(--spacing-8);
			width: var(--size);
			height: var(--size);
			z-index: 10;
		}
	}

	&.link--highlight {
		color: var(--color-content-highlight);
	}
}

/* Separator */

.separator {
	border-color: var(--color-content-quarternary);
	border-style: var(--decoration);
	flex: 1;

	&.separator--highlight {
		border-color: var(--color-content-highlight);
	}
}

/* Navigation */

nav {
	.home {
		left: var(--spacing-5);
		top: var(--spacing-5);

		@media (width > 480px) {
			position: absolute;
		}
	}
}

/* Feed */

.feed-list {
	position: relative;
	font-size: var(--text-sm);

	:where(& > :not(:last-child)) {
		margin-block-end: var(--spacing-6);
	}

	&.feed-list--person {
		:where(& > :not(:last-child)) {
			margin-block-end: var(--spacing-4);
		}
	}

	.feed-list__overview {
		-webkit-box-orient: vertical;
		-webkit-line-clamp: 3;
		color: var(--color-content-secondary);
		display: -webkit-box;
		overflow: hidden;
	}
}

/**
 * HTMX
 * ============================================================
 */

.htmx-indicator {
	opacity: 0;
	transition: opacity 500ms ease-in;
}

.htmx-request .htmx-indicator {
	opacity: 1;
}

.htmx-request.htmx-indicator {
	opacity: 1;
}
