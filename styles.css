@import "tailwindcss";

@theme inline {
  /* Background */
  --color-background-primary: light-dark(
    var(--color-white),
    var(--color-neutral-900)
  );
  --color-background-secondary: light-dark(
    var(--color-neutral-200),
    var(--color-neutral-800)
  );

  /* Border */
  --color-border-primary: light-dark(
    var(--color-neutral-300),
    var(--color-neutral-700)
  );
  --color-border-highlight: light-dark(
    var(--color-yellow-800),
    var(--color-yellow-100)
  );

  /* Content */
  --color-content-primary: light-dark(
    var(--color-neutral-700),
    var(--color-neutral-300)
  );
  --color-content-secondary: light-dark(
    var(--color-neutral-500),
    var(--color-neutral-400)
  );
  --color-content-tertiary: light-dark(
    var(--color-neutral-400),
    var(--color-neutral-600)
  );
  --color-content-quarternary: light-dark(
    var(--color-neutral-300),
    var(--color-neutral-700)
  );
  --color-content-negative: light-dark(
    var(--color-rose-700),
    var(--color-rose-400)
  );
}

:root {
  /* Enable light and dark mode colors */
  --spacing-1: 4px;
  --spacing-2: 8px;
  --spacing-3: 12px;
  --spacing-4: 16px;
  --spacing-5: 20px;
  --spacing-6: 24px;
  --spacing-7: 28px;
  --spacing-8: 32px;
  --spacing-max: calc(infinity * 1px);

  --rounded-sm: 4px;

  --text-xs: 0.75rem;
  --text-sm: 0.875rem;

  /* Background */
  --color-background-primary: light-dark(
    var(--color-white),
    var(--color-neutral-900)
  );
  --color-background-secondary: light-dark(
    var(--color-neutral-200),
    var(--color-neutral-800)
  );
  --color-background-tertiary: light-dark(
    var(--color-neutral-300),
    var(--color-neutral-700)
  );

  /* Border */
  --color-border-primary: light-dark(
    var(--color-neutral-300),
    var(--color-neutral-700)
  );

  /* Content */
  --color-content-primary: light-dark(
    var(--color-neutral-700),
    var(--color-neutral-300)
  );
  --color-content-secondary: light-dark(
    var(--color-neutral-500),
    var(--color-neutral-400)
  );
  --color-content-tertiary: light-dark(
    var(--color-neutral-400),
    var(--color-neutral-600)
  );
  --color-content-quarternary: light-dark(
    var(--color-neutral-300),
    var(--color-neutral-700)
  );
  --color-content-highlight: light-dark(
    var(--color-yellow-800),
    var(--color-yellow-200)
  );

  /* Enable light and dark mode colors */
  color-scheme: light dark;
}

@layer base, components;

@layer base {
  @media (prefers-reduced-motion: no-preference) {
    html {
      interpolate-size: allow-keywords;
    }
  }

  body {
    color: var(--color-content-primary);
    background-color: var(--color-background-primary);
  }

  .layout {
    display: flex;
    flex-direction: column;
    row-gap: var(--spacing-8);
    max-width: 36rem;
    padding-inline: var(--spacing-5);
    padding-top: var(--spacing-5);
    padding-bottom: calc(env(safe-area-inset-bottom) + 32px);
    margin-inline: auto;
  }
}

/* Component styles */
@layer components {
  .year {
    left: -13rem;
    z-index: 20;
    display: block;
    padding-block: var(--spacing-2);
    font-family:
      Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    font-size: var(--text-3xl);
    line-height: 2.25rem;
    color: transparent;
    -webkit-text-stroke-width: 2px;
    -webkit-text-stroke-color: light-dark(
      rgba(163 163 163 / 1),
      rgba(82 82 82 / 1)
    );
    background-color: var(--color-background-primary);

    @media (min-width: 1024px) {
      position: absolute;
      top: -1rem;
      padding-block: var(--spacing-4);
      font-size: 4.5rem;
      line-height: 1;
    }
  }
}

/* These handle positioning when the element sticks,
* .year and .month are use to align with the list items */
.year-indicator {
  position: sticky;
  top: 0;
  z-index: 20;
  margin-block: 0;

  @media (width >= 1024px) {
    top: var(--spacing-4);
  }
}

.month-indicator {
  position: sticky;
  top: 48px;
  z-index: 10;
  margin-block: 0;

  @media (width >= 1024px) {
    top: 96px;
  }
}

.month {
  z-index: 10;
  padding-block: var(--spacing-1);
  font-size: var(--text-lg);
  color: var(--color-content-tertiary);
  background-color: var(--color-background-primary);

  @media (width >= 1024px) {
    position: absolute;
    top: -4px;
    left: -196px;
    width: 160px;
    font-size: var(--text-xl);
    text-align: right;
  }
}

/* Scroll driven animation to fade in date indicators
* Note that the order of the properties seems to be important here,
* animation needed to be before animation-timeline.
* */
@media (prefers-reduced-motion: no-preference) and (min-width: 1024px) {
  @supports (animation-range: 0 50vh) {
    .year,
    .month {
      opacity: 0;
      transform: translateY(50px);
      animation: fade-in linear forwards;
      animation-timeline: view();
      /* Start at 0px (when it comes into view), end at half the screen height */
      animation-range: 0 50vh;
    }

    @keyframes fade-in {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  }
}

/**
 * Components
 * ============================================================ */

.focus:focus-visible {
  outline: 1px dashed var(--color-content-secondary);
  outline-offset: var(--spacing-1);
  border-radius: 1px;
}

/* Popover */

.popover {
  background-color: var(--color-background-secondary);
  border-radius: var(--spacing-1);
  color: var(--color-content-primary);
  font-size: var(--text-xs);
  margin: 4px;
  opacity: 0;
  padding: var(--spacing-2);
  position-area: top;
  position-try: flip-block;
  transition:
    opacity 500ms,
    translate 400ms,
    display 500ms allow-discrete,
    overlay 500ms allow-discrete;

  &:popover-open {
    opacity: 100;
    translate: 0;

    @starting-style {
      opacity: 0;
      translate: 0 10px;
    }
  }
}

.popover-button {
  /* Used for round focus styling */
  cursor: pointer;
  /* Used for round focus styling */
  border-radius: var(--spacing-max);
}

/* List */

@property --list-style {
  syntax: "numbered | none";
  inherits: false;
  initial-value: none;
}

.list {
  display: flex;
  flex-direction: column;
  row-gap: var(--spacing-2);
  counter-reset: count;

  &.list--plain .list__item:before {
    display: none;
  }
}

.list__item {
  column-gap: var(--spacing-4);
  align-items: flex-end;
  justify-content: space-between;
  list-style: initial;
  counter-increment: count;

  &::before {
    font-variant-numeric: tabular-nums;
    color: var(--color-content-tertiary);
    text-align: right;
    content: counter(count);
  }

  /* TODO: Use sibling-count() or something to set grid styling together
     * with conditional display styling */

  /* display: if(style(--list-style: none): flex; else: grid;); */

  &.list__item--baseline {
    align-items: baseline;
  }
}

.list-item__number {
  font-variant-numeric: tabular-nums;
  color: var(--color-content-tertiary);
  text-align: right;
}

.list-item__trailing {
  display: flex;
  column-gap: var(--spacing-2);
  align-items: center;
  font-size: var(--text-sm);
  white-space: nowrap;
}

.description-list {
  display: grid;
  grid-template-columns: max-content 1fr;
  row-gap: var(--spacing-2);
  column-gap: var(--spacing-6);

  @container (width <= 400px) {
    display: block;

    dt:nth-child(even) {
      margin-top: calc(var(--spacing-1) / 2);
      margin-bottom: var(--spacing-2);
    }

    :last-child > dt {
      margin-bottom: 0;
    }
  }

  .dd {
    font-weight: 600;
  }

  .dt {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-2);
    align-items: center;

    .dt--tabular {
      overflow: hidden;
      font-variant-numeric: tabular-nums;
    }
  }
}

/* Section */

.section {
  /** TODO: Not set color this high up? */
  color: var(--color-content-secondary);
  container-type: inline-size;
  display: flex;
  flex-direction: column;
  font-size: var(--text-sm);
  row-gap: var(--spacing-4);

  .section__title {
    display: flex;
    column-gap: var(--gap, var(--spacing-4));
    align-items: center;
    font-weight: 500;
    color: var(--color-content-primary);

    h2 {
      display: flex;
      column-gap: var(--spacing-2);
      align-items: center;
    }
  }

  .section__subtitle {
    font-size: var(--text-xs);
    font-weight: 400;
    color: var(--color-content-secondary);
  }
}

/* Link */

.link {
  --size: 56px;
  display: inline-flex;
  gap: var(--spacing-1);
  align-items: center;
  font-size: var(--text-sm);
  font-variant-numeric: tabular-nums;
  color: var(--color-content-primary);
  border-color: inherit;
  border-bottom: 1px dashed;
  transition: border-color 150ms ease-in;

  &:hover {
    border-color: var(--color-content-secondary);
  }

  &.link--new {
    --size: 40px;
    position: relative;
    padding: 4px;
    border-bottom: 0;
    border-radius: var(--spacing-max);

    &:before {
      position: absolute;
      top: 50%;
      left: 50%;
      z-index: -1;
      width: var(--size);
      height: var(--size);
      content: "";

      border-radius: var(--spacing-max);
      transform: translateX(-50%) translateY(-50%) scale(0.8);
      transform-origin: top left;
      transition:
        background-color 200ms ease-in-out,
        transform 150ms ease-in;

      @media (width <= 480px) {
        display: none;
      }
    }

    &:hover:before {
      background-color: var(--color-background-secondary);
      transform: translateX(-50%) translateY(-50%) scale(1);
    }

    &:active,
    &:active:before {
      background-color: var(--color-background-tertiary);
      transform: translateX(-50%) translateY(-50%) scale(1);
    }

    @media (width <= 480px) {
      position: fixed;
      right: var(--spacing-8);
      bottom: var(--spacing-8);
      z-index: 10;
      display: flex;

      align-items: center;
      justify-content: center;
      width: var(--size);
      height: var(--size);
      background-color: var(--color-background-secondary);
    }
  }

  &.link--highlight {
    color: var(--color-content-highlight);
  }

  &.link--imdb {
    border: 0;

    &:hover {
      > span {
        border-color: var(--color-content-secondary);
      }
    }

    > span {
      border-color: inherit;
      border-bottom: 1px dashed;
      transition: border-color 150ms ease-in;
    }
  }
}

/* Separator */

.separator {
  flex: 1;
  border-color: var(--color-content-quarternary);
  border-style: var(--decoration);

  &.separator--highlight {
    border-color: var(--color-content-highlight);
  }
}

/* Navigation */

nav {
  .link {
    font-size: 1rem;
  }

  .home {
    top: var(--spacing-5);
    left: var(--spacing-5);

    @media (width > 480px) {
      position: absolute;
    }
  }
}

/* Checkbox */

.checkbox {
  display: flex;
  column-gap: var(--spacing-2);
  align-items: center;

  input {
    height: var(--spacing-4);
    accent-color: var(--color-neutral-700);
    border: 1px solid var(--color-border-primary);
    border-radius: var(--rounded-sm);
  }
}

/* Dropdown */

.dropdown {
  padding-block: var(--spacing-1);
  padding-inline: var(--spacing-2);
  font-size: var(--text-xs);
  text-align: center;
  appearance: none;
  border: 1px solid var(--color-border-primary);
  border-radius: var(--spacing-1);
}

/* Empty state */

.empty-state {
  padding-block: var(--spacing-8);
  padding-inline: var(--spacing-5);
  color: var(--color-content-secondary);
  text-align: center;
  list-style: none;
  border: 1px dashed var(--color-border-primary);
  border-radius: var(--spacing-1);
}

/* Input */

.input-wrap {
  display: flex;
  flex-direction: column;
  row-gap: var(--spacing-2);

  &:has(*:required) .input-label::after {
    margin-inline-start: calc(var(--spacing-1) / 2);
    color: var(--color-content-tertiary);
    content: "*";
  }
}

.input-label {
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--color-content-secondary);
}

.input-help {
  font-size: var(--text-xs);
  color: var(--color-content-secondary);
}

.input {
  padding-block: var(--spacing-2);
  padding-inline: var(--spacing-4);
  border: 1px solid var(--color-border-primary);
  border-radius: var(--spacing-1);
}

.input--number {
  /* Hide up/down arrows inside number input */
  &::-webkit-inner-spin-button {
    appearance: none;
  }
}

/* Collapsible */

.collapsible {
  summary {
    cursor: pointer;
  }

  .collapsible__content {
    display: flex;
    flex-direction: column;
    row-gap: var(--spacing-6);
    margin-top: var(--spacing-4);
  }
}

/* Button */

.button {
  color: var(--color-background-primary);
  cursor: pointer;
  background-color: var(--color-content-primary);
  border-radius: var(--rounded-sm);

  &:hover .button__state {
    background-color: rgba(0, 0, 0, 0.1);
  }

  &:active .button__state {
    background-color: rgba(0, 0, 0, 0.3);
  }

  &.button--secondary {
    color: var(--color-content-secondary);
    background-color: transparent;
    transition: color 150ms ease-in-out;

    .button__state {
      padding: 0;
    }

    &:hover {
      color: var(--color-content-primary);
    }
  }

  &.htmx-request .button__content {
    display: none;
  }

  &.htmx-request .button__loading {
    display: block;
    opacity: 1;

    @starting-style {
      opacity: 0;
    }
  }

  .button__state {
    display: flex;
    column-gap: var(--spacing-2);
    align-items: center;
    justify-content: center;
    padding-block: var(--spacing-2);
    padding-inline: var(--spacing-6);
    transition: background-color 150ms ease-in-out;
  }

  .button__loading {
    display: none;
    transition: opacity 300ms ease-in-out;
  }
}

/* Form */

.form {
  display: flex;
  flex-direction: column;
  row-gap: var(--spacing-6);
  max-width: 36rem;
  padding-block: var(--spacing-8);
  padding-inline: var(--spacing-5);
  margin-inline: auto;

  .form__error {
    padding: var(--spacing-4);
    color: var(--color-content-negative);
    border: 1px dashed var(--color-content-negative);
    border-radius: var(--rounded-sm);

    &:empty {
      display: none;
    }
  }

  header .link {
    font-size: 1rem;
  }

  footer {
    display: flex;
    flex-direction: column;
    row-gap: var(--spacing-4);
  }
}

/* Textarea */

.textarea {
  width: 100%;
  height: 160px;
  padding-block: var(--spacing-2);
  padding-inline: var(--spacing-4);
  border: 1px solid var(--color-border-primary);
  border-radius: var(--rounded-sm);
}

/**
 * Views
 * ============================================================
 */

/* Feed */

.feed-list {
  position: relative;
  font-size: var(--text-sm);

  :where(& > :not(:last-child)) {
    margin-block-end: var(--spacing-6);
  }

  &.feed-list--person {
    :where(& > :not(:last-child)) {
      margin-block-end: var(--spacing-4);
    }
  }

  .feed-list__overview {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
    -webkit-line-clamp: 3;
    color: var(--color-content-secondary);
  }
}

.stats {
  display: flex;
  flex-direction: column;
  row-gap: var(--spacing-8);
  max-width: 36rem;
  padding-block: var(--spacing-8);
  padding-inline: var(--spacing-5);
  margin-inline: auto;

  @media (width >= 1024px) {
    max-width: 64rem;
    padding-top: 48px;
  }

  .stats__content {
    display: grid;
    grid-template-columns: 1fr;
    gap: 40px;

    @media (width >= 1024px) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .stats__column {
    display: flex;
    flex-direction: column;
    row-gap: var(--spacing-8);
  }
}

.rating {
  display: flex;
  flex-direction: row;
  column-gap: var(--spacing-4);
}
