package components

import (
	"fmt"
	"time"
)

type WatchedProps struct {
	WatchedAt   []time.Time
	IsAdmin     bool
	InWatchlist bool
	ImdbId      string
	ID          string
}

templ Watched(props WatchedProps) {
	@Section("", 0) {
		if len(props.WatchedAt) > 0 {
			<ol class="flex flex-col gap-2">
				for _, w := range props.WatchedAt {
					<li class="tabular-nums">{ w.Format("2006-01-02 15:04") }</li>
				}
				if props.IsAdmin {
					<li>
						<a
							href="#"
							hx-post={ fmt.Sprintf("/movie/%s/seen", props.ID) }
							class="truncate border-b border-dashed border-neutral-500 focus:outline-none focus-visible:rounded-sm focus-visible:outline-dashed focus-visible:outline-offset-2 focus-visible:outline-neutral-400 dark:border-neutral-400 dark:focus-visible:outline-neutral-600"
						>
							Add new watch
						</a>
					</li>
				}
			</ol>
		} else if props.InWatchlist {
			<div class="flex gap-x-2 items-center">
				<a
					class="border-b border-dashed border-neutral-500 focus:outline-none focus-visible:rounded-sm focus-visible:outline-dashed focus-visible:outline-offset-2 focus-visible:outline-neutral-400 dark:border-neutral-400 dark:focus-visible:outline-neutral-600"
					href="/watchlist"
				>In watchlist</a>
				<a href={ templ.URL(fmt.Sprintf("/movie/new?imdbId=%s&id=%s", props.ImdbId, props.ID)) } class="text-neutral-500 dark:text-neutral-400 hover:text-neutral-800 dark:hover:text-neutral-200 transition-colors" title="Add watch">
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
						<path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z"></path>
						<path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"></path>
					</svg>
				</a>
			</div>
		} else {
			<span>No watches found</span>
		}
	}
}
