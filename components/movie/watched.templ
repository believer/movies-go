package movie

import (
	c "believer/movies/components"
	"fmt"
	"strconv"
	"time"
)

type WatchedProps struct {
	WatchedAt   []time.Time
	IsAdmin     bool
	InWatchlist bool
	ImdbId      string
	ID          string
}

templ addWatch(id string) {
	@c.IsAuthenticated() {
		<a
			href="#"
			hx-post={ fmt.Sprintf("/movie/%s/seen", id) }
			class="truncate border-b border-dashed border-neutral-500 focus:outline-hidden focus-visible:rounded-xs focus-visible:outline-dashed focus-visible:outline-offset-2 focus-visible:outline-neutral-400 dark:border-neutral-400 dark:focus-visible:outline-neutral-600"
		>
			Add new watch
		</a>
	}
}

templ Watched(props WatchedProps) {
	@c.SectionWithAction("Watched", len(props.WatchedAt), addWatch(props.ID)) {
		if len(props.WatchedAt) > 0 {
			<ol class="flex flex-col gap-2">
				for i, w := range props.WatchedAt {
					<li
						class="flex gap-x-4 tabular-nums before:content-[attr(data-position)] before:text-right before:tabular-nums before:w-[2ch] before:text-neutral-400 dark:before:text-neutral-600"
						data-position={ strconv.Itoa(len(props.WatchedAt) - i) }
					>
						<span class="flex gap-x-2">
							<span>
								{ w.Format("Monday, January 02, 2006") }
							</span>
							<span class="text-neutral-400 dark:text-neutral-600">
								{ `@` }
							</span>
							<span>
								{ w.Format("15:04") }
							</span>
						</span>
					</li>
				}
			</ol>
		} else if props.InWatchlist {
			<div class="flex gap-x-2 items-center">
				<a
					class="border-b border-dashed border-neutral-500 focus:outline-hidden focus-visible:rounded-xs focus-visible:outline-dashed focus-visible:outline-offset-2 focus-visible:outline-neutral-400 dark:border-neutral-400 dark:focus-visible:outline-neutral-600"
					href="/watchlist"
				>In watchlist</a>
				@c.IsAuthenticated() {
					<a href={ templ.URL(fmt.Sprintf("/movie/new?imdbId=%s&id=%s", props.ImdbId, props.ID)) } class="text-neutral-500 dark:text-neutral-400 hover:text-neutral-800 dark:hover:text-neutral-200 transition-colors" title="Add watch">
						@c.IconEye()
					</a>
				}
			</div>
		} else {
			<div class="flex gap-x-2">
				<div>No watches</div>
				<a
					class="border-b border-dashed border-neutral-500 focus:outline-hidden focus-visible:rounded-xs focus-visible:outline-dashed focus-visible:outline-offset-2 focus-visible:outline-neutral-400 dark:border-neutral-400 dark:focus-visible:outline-neutral-600"
					href={ templ.URL(fmt.Sprintf("/movie/new?imdbId=%s&id=%s", props.ImdbId, props.ID)) }
				>
					Add watch
				</a>
			</div>
		}
	}
}
