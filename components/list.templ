package components

import (
	"fmt"
	"strconv"
)

type ListItem struct {
	Name  string `db:"name"`
	ID    string `db:"id"`
	Count int    `db:"count"`
}

templ OrderedList(data []ListItem, listType string) {
	<ol class="flex flex-col gap-2">
		for i, item := range data {
			<li
				class="flex items-end justify-between gap-4 before:content-[attr(data-position)] before:text-right before:tabular-nums before:w-[2ch] before:text-neutral-400 dark:before:text-neutral-600"
				data-position={ strconv.Itoa(i + 1) }
			>
				if listType == "movie" {
					@Link(LinkProps{Href: templ.URL(fmt.Sprintf("/movie/%s", item.ID))}) {
						{ item.Name }
					}
				} else if listType == "person" {
					@Link(LinkProps{Href: templ.URL(fmt.Sprintf("/person/%s", item.ID))}) {
						{ item.Name }
					}
				} else if listType == "genre" {
					@Link(LinkProps{Href: templ.URL(fmt.Sprintf("/genre/%s", item.ID))}) {
						{ item.Name }
					}
				}
				@Divider()
				<span class="tabular-nums text-sm text-neutral-500 dark:text-neutral-400 relative top-1">
					{ strconv.Itoa(item.Count) }
				</span>
			</li>
		}
	</ol>
}

type DataListItem struct {
	Label string `db:"name"`
	Value string `db:"value"`
}

templ DataList(options []DataListItem, id string) {
	<datalist id={ id }>
		for _, option := range options {
			<option value={ option.Value } label={ option.Label }></option>
		}
	</datalist>
}
