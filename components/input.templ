package components

import "strconv"

var inputClass = "w-full rounded border border-neutral-400 bg-transparent px-4 py-2 ring-offset-2 ring-offset-white focus:outline-none focus:ring-2 focus:ring-neutral-400 dark:border-neutral-700 dark:ring-offset-neutral-900 dark:focus:ring-neutral-500 appearance-none [&::-webkit-inner-spin-button]:appearance-none"

templ Label(name string, label string) {
	<label
		for={ name }
		class="text-sm font-semibold text-neutral-500 dark:text-neutral-400 group-has-[:required]:after:content-['*'] after:text-neutral-400 dark:after:text-neutral-500"
	>
		{ label }
	</label>
}

templ Help(text string) {
	<div class="text-xs text-neutral-500 dark:text-neutral-400">
		{ text }
	</div>
}

templ TextInput(name string, labelText string, helpText string) {
	<div class="relative flex flex-col gap-2">
		@Label(name, labelText)
		<input
			required
			type="text"
			name={ name }
			id={ name }
			class={ inputClass }
		/>
		if helpText != "" {
			@Help(helpText)
		}
	</div>
}

templ NumberInput(name string, labelText string, helpText string, min int, max int) {
	<div class="relative flex flex-col gap-2 group">
		@Label(name, labelText)
		<input
			required
			type="number"
			name={ name }
			id={ name }
			class={ inputClass }
			min={ strconv.Itoa(min) }
			max={ strconv.Itoa(max) }
		/>
		if helpText != "" {
			@Help(helpText)
		}
	</div>
}

templ DateTimeInput(name string, labelText string, helpText string) {
	<div class="relative flex flex-col gap-2">
		@Label(name, labelText)
		<input
			type="datetime-local"
			name={ name }
			id={ name }
			class={ inputClass, "h-11 dark:[color-scheme:dark]" }
		/>
		if helpText != "" {
			@Help(helpText)
		}
	</div>
}

templ PasswordInput(name string, labelText string, helpText string) {
	<div class="relative flex flex-col gap-2">
		@Label(name, labelText)
		<input
			required
			type="password"
			name={ name }
			id={ name }
			class={ inputClass }
		/>
		if helpText != "" {
			@Help(helpText)
		}
	</div>
}
