package input

import "strconv"

type NumberProps struct {
	Name     string
	Label    string
	HelpText string
	Min      int
	Max      int
	Required bool
	Value    int
}

templ Label(name string, label string) {
	if label != "" {
		<label for={ name } class="input-label">
			{ label }
		</label>
	}
}

templ Help(text string) {
	<div class="input-help">
		{ text }
	</div>
}

/* Text
 * =========================================================== */

type TextProps struct {
	Name     string
	Label    string
	HelpText string
	Value    string
}

templ Text(props TextProps) {
	<div class="input-wrap">
		@Label(props.Name, props.Label)
		<input
			required
			type="text"
			name={ props.Name }
			id={ props.Name }
			class="input focus"
			if props.Value != "" {
				value={ props.Value }
			}
		/>
		if props.HelpText != "" {
			@Help(props.HelpText)
		}
	</div>
}

/* Password
 * =========================================================== */

type PasswordProps struct {
	Name     string
	Label    string
	HelpText string
}

templ Password(props PasswordProps) {
	<div class="input-wrap">
		@Label(props.Name, props.Label)
		<input
			required
			type="password"
			name={ props.Name }
			id={ props.Name }
			class="input focus"
		/>
		if props.HelpText != "" {
			@Help(props.HelpText)
		}
	</div>
}

/* Number
 * =========================================================== */

templ Number(props NumberProps) {
	<div class="input-wrap">
		@Label(props.Name, props.Label)
		<input
			if props.Required {
				required
			}
			type="number"
			name={ props.Name }
			id={ props.Name }
			class="input input--number focus"
			min={ strconv.Itoa(props.Min) }
			max={ strconv.Itoa(props.Max) }
			if props.Value > 0 {
				value={ props.Value }
			}
		/>
		if props.HelpText != "" {
			@Help(props.HelpText)
		}
	</div>
}

/* DateTime
 * =========================================================== */

type DateTimeProps struct {
	Name     string
	Label    string
	HelpText string
	Value    string
}

templ DateTime(props DateTimeProps) {
	<div class="input-wrap">
		@Label(props.Name, props.Label)
		<input
			type="datetime-local"
			name={ props.Name }
			id={ props.Name }
			class="input focus"
			value={ props.Value }
		/>
		if props.HelpText != "" {
			@Help(props.HelpText)
		}
	</div>
}
