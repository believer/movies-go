package components

import "fmt"
import "believer/movies/components/icon"
import "believer/movies/components/popover"

type SeenProps struct {
	ImdbId string
	ID     int
	Seen   bool
	Title  string
}

templ SeenToggle() {
	<span class="text-neutral-300 dark:text-neutral-700" slot="button">
		@icon.Icon(icon.Props{Name: icon.Check})
	</span>
}

templ AddWatch(id int, imdbId string) {
	@IsAuthenticated() {
		<a
			href={ templ.URL(fmt.Sprintf("/movie/new?imdbId=%s&id=%d", imdbId, id)) }
			title="Add watch"
			class="inline-flex items-center gap-1 focus:outline-hidden focus-visible:rounded-xs focus-visible:outline-dashed focus-visible:outline-1 focus-visible:outline-offset-2 focus-visible:outline-neutral-400 dark:focus-visible:outline-neutral-600 border-b border-dashed border-neutral-500 dark:border-neutral-400"
		>
			Add watch
		</a>
	}
}

templ UnseenToggle() {
	<span class="text-neutral-700 dark:text-neutral-300">
		@icon.Icon(icon.Props{Name: icon.Times})
	</span>
}

templ SeenContent(id int, imdbId string) {
	<div class="flex flex-col gap-y-2">
		<span>Seen</span>
		@AddWatch(id, imdbId)
	</div>
}

templ UnseenContent(id int, imdbId string) {
	<div class="flex flex-col gap-y-2">
		<span>Unseen</span>
		@AddWatch(id, imdbId)
	</div>
}

templ Seen(props SeenProps) {
	if props.Seen {
		@popover.Popover(popover.Props{
			AnchorName: fmt.Sprintf("--anchor-%s-%d", props.Title, props.ID),
			Content:    SeenContent(props.ID, props.ImdbId),
			Toggle:     SeenToggle(),
		})
	} else {
		@popover.Popover(popover.Props{
			AnchorName: fmt.Sprintf("--anchor-%s-%d", props.Title, props.ID),
			Content:    UnseenContent(props.ID, props.ImdbId),
			Toggle:     UnseenToggle(),
		})
	}
}
