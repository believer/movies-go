package components

import "fmt"

type CastAndCrewDTO struct {
	Name      string
	ID        int32
	Character string
}

type CastDTO struct {
	Job    string
	People []CastAndCrewDTO
}

templ CastList(castOrCrew []CastDTO, hasCharacters bool) {
	<div
		class="flex flex-col gap-8 text-neutral-500 dark:text-neutral-400 md:text-sm"
	>
		for _, job := range castOrCrew {
			@Section(job.Job, 0) {
				<ul class="grid grid-cols-1 gap-2 sm:grid-cols-2">
					for _, person := range job.People {
						if hasCharacters {
							<li class="col-span-2 flex items-end justify-between gap-4">
								<a
									class="border-b border-dashed border-neutral-500 focus:outline-none focus-visible:rounded-sm focus-visible:outline-dashed focus-visible:outline-offset-2 focus-visible:outline-neutral-400 dark:border-neutral-400 dark:focus-visible:outline-neutral-600 whitespace-nowrap"
									href={ templ.URL(fmt.Sprintf("/person/%d", person.ID)) }
								>
									{ person.Name }
								</a>
								if person.Character != "" {
									@Divider()
								}
								<div class="text-sm truncate relative top-1">{ person.Character }</div>
							</li>
						} else {
							<li>
								<a
									class="border-b border-dashed border-neutral-500 focus:outline-none focus-visible:rounded-sm focus-visible:outline-dashed focus-visible:outline-offset-2 focus-visible:outline-neutral-400 dark:border-neutral-400 dark:focus-visible:outline-neutral-600"
									href={ templ.URL(fmt.Sprintf("/person/%d", person.ID)) }
								>
									{ person.Name }
								</a>
							</li>
						}
					}
				</ul>
			}
		}
	</div>
}
